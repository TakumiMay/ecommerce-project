openapi: 1.8.0
info:
  title: Ecommerce Products API
  description: This API manages Product CRUD Operations
  contact:
    email: maythermyself@gmail.com
  version: 1.0.0
servers:
  - url: http://localhost:8080/
tags:
  - name: Product
    description: This endpoint manages the Product operations
paths:
  /products/create:
    post:
      tags:
        - Product
      summary: Add a new product
      description: Add a new product to the ecommerce DB
      operationId: createProduct
      requestBody:
        description: Add a new product to the ecommerce DB
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductBody'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductBody'
  /products/all:
    get:
      tags:
        - Product
      summary: Get all products
      description: Retrieve a list of all products in the ecommerce DB
      operationId: getAll
      responses:
        '200':
          description: A list of all products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductBody'
                example:
                  - id: 1
                    name: "Product 1"
                    price: 19.99
                  - id: 2
                    name: "Product 2"
                    price: 29.99
  /products/{id}:
    get:
      tags:
        - Product
      summary: Finds a Product by Id
      operationId: getProduct
      parameters:
        - name: id
          in: path
          description: ID of the student to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ProductBody'
        '404':
          description: Not Found
    put:
      tags:
        - Product
      summary: Update an existing product
      description: Update an existing product by Id
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          description: ID of the product to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductBody'
        required: true
      responses:
        '202':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductBody'
        '404':
          description: Not Found
    delete:
      tags:
        - Product
      summary: Deletes a product
      description: Product {id} deleted successfully
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          description: ID of the product to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
        '404':
          description: Not Found
components:
  schemas:
    ProductBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: null
        name:
          type: string
          example: "Product 1"
        price:
          type: number
          format: double
          example: 23.07